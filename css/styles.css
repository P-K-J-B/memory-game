html {
    box-sizing: border-box;
}

html,
body {
	font-family: 'Cinzel Decorative', cursive;
	color: #ffce87;
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    vertical-align: top;
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
    background-image: url('../img/Battlefield-Sarel-Theron.jpg'); 
	background-size: cover;
	background-position: 50% 50%;
	background-repeat: no-repeat;
}

a {
	color: #ffce87;
	text-decoration: underline;
}

p {
	margin: 0;
	font-size: 0.8em;
	transition: all 0.3s ease;
}

h2 {
	margin: 0;
	padding-top: 6em;
	font-size: 1.3em;
	letter-spacing: 0.07em;
	transition: all 0.3s ease;
}

/*
___________________________________________________
TITLE & SCORE PANEL

*/

.header-container {
	width: 50%;
	height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    transition: all 0.3s ease;
}

.title {
	font-size: 1em;
	letter-spacing: 0.07em;
	transition: all 0.3s ease;
}

.score-panel {
	margin-bottom: 70%;
	display: inline-block;
	font-size: 0.9em;
    text-align: left;
    width: 100%;
    line-height: 2em;
    transition: all 0.3s ease;
}

.score-panel header {
	text-align: center;
}

.stars {
    padding: 0;
	list-style: none;
	margin-left: 0.5em;
	transition: all 0.3s ease;
}

.stars li {
	display: inline-block;
	float: left;
}

.star-unfill {
	display: inline-block;
	height: 1.2em;
	width: 1.2em;
	background-image: url('../img/star-unfill.svg'); 
	background-size: contain;
	background-repeat: no-repeat;
	padding-left: 0.3em;
	transition: all 0.3s ease;
}

.star-fill {
	display: inline-block;
	height: 1.2em;
	width: 1.2em;
	background-image: url('../img/star-fill.svg'); 
	background-size: contain;
	background-repeat: no-repeat;
	padding-left: 0.3em;
	transition: all 0.3s ease;
}

.moves {
	margin-left: 0.3em;
}

.timer {
	display: inline-block;
	float: right;
}

.restart {
	display: inline-block;
	height: 1.5em;
	width: 1.5em;
	background-image: url('../img/restart.svg'); 
	background-size: contain;
	background-repeat: no-repeat;
	margin-left: 0.5em;
	margin-right: 0.5em;
    float: right;
    cursor: pointer;
    transition: all 0.3s ease;
    opacity: 0.6;
}

.restart:hover {
    opacity: 1;
}

/*
___________________________________________________
GAME BOARD & CARD TYPES

*/

.game-board-container {
	width: 50%;
	height: 100%;
	display: flex;
	flex-wrap: wrap;
    justify-content: center;
}

.game-board {
	margin: 0;
	width: 100%;
    background: linear-gradient(160deg, #6e6e6e 40%, #b63332 100%);
    border-radius: 10px;
    box-shadow: 10px 10px 20px 0 rgba(0, 0, 0, 0.4);
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    padding: 1%;
    list-style: none;
    transition: all 0.3s ease;
}

.credit {
	width: 100%;
	font-family: none;
	color: white;
	text-align: center;
	padding-top: 0.8em;
	position: absolute;
	right: 25%;
	bottom: 10px;
}

.card {
	width: 24%;
	justify-content: center;
	background-color: #161616;
    border-radius: 8px;
    cursor: pointer;
	margin: 0.5%;
	background-size: 55px 55px;
	background-position: 50% 50%;
	background-repeat: no-repeat;
	box-shadow: 3px 3px 10px 0 rgba(0, 0, 0, 0.4);
	order: 0;
	transition: all 0.3s ease;
}

.sword {
	background-image: url('../img/sword.svg');
}

.flail {
	background-image: url('../img/flail.svg');
	background-size: 50px 50px;
}

.shield {
	background-image: url('../img/shield.svg');
}

.axe {
	background-image: url('../img/axe.svg');
}

.hammer {
	background-image: url('../img/hammer.svg');
}

.dagger {
	background-image: url('../img/dagger.svg');
	background-size: 45px 45px;
}

.bow {
	background-image: url('../img/bow.svg');
	background-size: 60px 60px;
}

.crossbow {
	background-image: url('../img/crossbow.svg');
}

/*
___________________________________________________
MATCHED & UNMATCHED CARD STYLES

*/

.open {
	transform: rotateY(0);
	background-color: #268dc8;
	cursor: default;
	animation-name: faceUp;
	backface-visibility: visible;
	animation-duration: 0.60s;
}

.face-down {
	background-image: url('');
	animation-name: faceDown;
	animation-duration: 0.50s;
}

.matched {
	cursor: default;
	background-color: #1fbe6d;
	animation-name: match;
	backface-visibility: visible;
	animation-duration: 0.75s;
}

.unmatched {
	background-color: #d30e21;
	animation-name: unmatch;
	backface-visibility: visible;
	animation-duration: 0.75s;
}

.disabled {
	pointer-events: none;
}

/*
___________________________________________________
ENDGAME OVERLAY

*/

#end {
	visibility: hidden;
	opacity: 0;	
}

.overlay {
	position: fixed;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	background: rgba(0, 0, 0, 0.6);
	transition: all 0.3s ease;
}

.popup {
	position: fixed;
    margin-left: auto;
    margin-right: auto;
	width: 100%;
	height: 360px;
	text-align: center;
	line-height: 1.7em;
	background-image: url('../img/popup-bkg.png');
	background-size: 450px;
	background-position: 50% 50%;
	background-repeat: no-repeat;
	transition: all 0.3s ease;
}

.rating {
	margin: 0 0 0 0;
	padding: 0;
}

.rating .star-unfill {
	height: 1.2em;
	width: 1.2em;
	transition: all 0.3s ease;
}

.rating .star-fill {
	height: 1.2em;
	width: 1.2em;
	transition: all 0.3s ease;
}

.play-again {
	cursor: pointer;
	transition: all 0.3s ease;
}

.play-again:hover {
	color: white;
}

/*
___________________________________________________
CARD ANIMATIONS

*/

@keyframes faceUp {
	from {
		transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
		animation-timing-function: ease-in;
	}

	40% {
		transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
		animation-timing-function: ease-in;
	}

	60% {
		transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
	}

	80% {
		transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
	}

	to {
		transform: perspective(400px);
	}
}

@keyframes faceDown {
	from {
		transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
		animation-timing-function: ease-in;
	}

	40% {
		transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
		animation-timing-function: ease-in;
	}

	60% {
		transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
	}

	80% {
		transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
	}

	to {
		transform: perspective(400px);
	}
}

@keyframes match {
	from {
		transform: scale3d(1, 1, 1);
	}

	30% {
		transform: scale3d(1.1, 0.9, 1);
	}

	40% {
		transform: scale3d(0.9, 1.1, 1);
	}

	50% {
		transform: scale3d(1.15, 0.9, 1);
	}

	65% {
		transform: scale3d(.9, 1.1, 1);
	}

	75% {
		transform: scale3d(1.1, .9, 1);
	}

	to {
		transform: scale3d(1, 1, 1);
	}
}

@keyframes unmatch {
	from {
		transform: scale3d(1, 1, 1);
	}

	50% {
		transform: scale3d(1.1, 1.1, 1.1);
	}

	to {
		transform: scale3d(1, 1, 1);
	}
}